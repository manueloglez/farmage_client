{"version":3,"sources":["api.js","components/Homepage.js","components/SignInPage.js","components/SignUpPage.js","components/NotFoundPage.js","components/FieldsMap.js","components/FieldsList.js","components/Navbar.js","components/KmlBase.js","components/FieldForm.js","components/NewField.js","components/KmlUpload.js","components/PolygonList.js","components/FieldPage.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","Session","params","fetch","method","credentials","headers","body","JSON","stringify","then","res","json","User","Field","id","Polygon","Homepage","props","useEffect","console","log","Segment","inverted","textAlign","style","minHeight","padding","vertical","Container","text","Header","as","content","fontSize","fontWeight","marginBottom","marginTop","user","to","Button","color","size","Icon","name","Divider","className","horizontal","margin","textTransform","SignInPage","useState","errors","setErrors","history","push","Grid","height","verticalAlign","Column","width","Form","onSubmit","event","preventDefault","form","currentTarget","formData","FormData","email","get","password","data","status","message","onSignIn","stacked","Input","fluid","icon","iconPosition","placeholder","type","Message","Image","src","SignUpPage","first_name","last_name","password_confirmation","onSignUp","NotFoundPage","FieldsMap","polygons","draw","geometry","setGeometry","preview","editableFG","setEditableFG","map","setMap","Popup","polygon","href","field_id","L","addTo","fitBounds","getBounds","handleKmlLoad","pm","addControls","position","drawCircle","drawCircleMarker","drawPolyline","drawRectangle","drawMarker","drawPolygon","editMode","dragMode","cutPolygon","deleteMode","selectedPathOptions","weight","opacity","selectedPathInteractive","selectedPathDashArray","fullscreenControl","on","layer","shape","geojson","_latlngs","toGeoJSON","MapContainer","center","zoom","scrollWheelZoom","FeatureGroup","ref","featureGroupRef","reactFGref","MapConsumer","bounds","eachLayer","_url","removeLayer","classification","p","omnivore","wkt","parse","geom","popupContent","ReactDOMServer","renderToString","bindPopup","extend","getCenter","addWktToMap","isValid","TileLayer","attribution","url","subdomains","FieldsList","fields","setFields","search","setSearch","setPolygons","useHistory","Row","onChange","value","List","relaxed","Item","onClick","borderRadius","Content","filter","el","field","fullString","location","toLowerCase","searchArr","split","every","word","includes","filterFields","display","justifyContent","alignItems","marginLeft","Description","crop_type","window","confirm","f","Navbar","currentUser","onSignOut","Menu","KmlBase","flexDirection","accept","reader","FileReader","onload","e","parsedKML","DOMParser","parseFromString","target","result","kml","multipolygon","features","coordinates","geometries","g","length","output","readAsText","files","FieldForm","fieldParams","polygonParams","catch","err","Group","Or","positive","NewField","handleSetGeometry","KmlUpload","toggleKml","reload","error","PolygonList","selectedPolygon","setSelectedPolygon","setDraw","creating","setCreating","handleDownload","geoj","kmlParsed","filename","element","document","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","download","area","FieldPage","match","setField","App","setUser","getCurrentUser","exact","path","render","routeProps","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ac954d7b.chunk.js","sourcesContent":["const BASE_URL = 'https://farmageapi.herokuapp.com/api/v1'\n\nexport const Session = {\n  create(params) {\n    return fetch(`${BASE_URL}/session`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => {\n      return res.json()\n    })\n  },\n  destroy() {\n    return fetch(`${BASE_URL}/session`, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    })\n  }\n}\n\nexport const User = {\n  current(){\n   return fetch(`${BASE_URL}/users/current`, {\n     credentials: 'include'\n   }).then(res => res.json()) \n  }, \n  create(params) {\n    return fetch(`${BASE_URL}/users`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => {\n      return res.json()\n    })\n  },\n}\n\nexport const Field = {\n  index() {\n    return fetch(`${BASE_URL}/fields`, {\n      credentials: 'include'\n    }).then(res => res.json())\n  },\n  create(params) {\n    return fetch(`${BASE_URL}/fields`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => {\n      return res.json()\n    })\n  },\n  show(id) {\n    return fetch(`${BASE_URL}/fields/${id}`, {\n      credentials: 'include'\n    }).then(res => res.json())\n  },\n  update(id, params) {\n    return fetch(`${BASE_URL}/fields/${id}`, {\n      method: 'PATCH',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => {\n      return res.json()\n    })\n  },\n  destroy(id) {\n    return fetch(`${BASE_URL}/fields/${id}`, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    })\n  },\n}\n\nexport const Polygon = {\n  index(id) {\n    return fetch(`${BASE_URL}/users/${id}/polygons`, {\n      credentials: 'include'\n    }).then(res => res.json())\n  },\n  indexByField(id) {\n    return fetch(`${BASE_URL}/fields/${id}/polygons`, {\n      credentials: 'include'\n    }).then(res => res.json())\n  },\n  create(id, params) {\n    return fetch(`${BASE_URL}/fields/${id}/polygons`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => {\n      return res.json()\n    })\n  },\n  show(id) {\n    return fetch(`${BASE_URL}/polygons/${id}`, {\n      credentials: 'include'\n    }).then(res => res.json())\n  },\n  update(id, params) {\n    return fetch(`${BASE_URL}/polygons/${id}`, {\n      method: 'PATCH',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => {\n      return res.json()\n    })\n  },\n  destroy(id) {\n    return fetch(`${BASE_URL}/polygons/${id}`, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    })\n  },\n}\n","\nimport React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  Button,\n  Container,\n  Divider,\n  Header,\n  Icon,\n  Segment,\n} from 'semantic-ui-react'\n\nconst Homepage = (props) => {\n  useEffect(() => {\n    console.log(props)\n  }, [])\n  return (\n  <>\n  <Segment inverted\n            textAlign='center'\n            style={{ minHeight: 700, padding: '1em 0em' }}\n            vertical>\n    <Container text>\n      <Header\n        as='h1'\n        content='Farmage'\n        inverted\n        style={{\n          fontSize: '6em',\n          fontWeight: 600,\n          marginBottom: 0,\n          marginTop: '2em',\n        }}\n      />\n      <Header\n        as='h2'\n        content='Keeping your fields organized.'\n        inverted\n        style={{\n          fontSize: '2em',\n          fontWeight: 'normal',\n          marginTop: '1em',\n          marginBottom: '1em'\n        }}\n      />\n      { props.user ? \n        <Link>\n          <Link to='/fields'>\n            <Button color='teal' size='huge'>\n              Go to your fields\n            </Button>\n          </Link>\n        </Link> : \n        <> \n          <Link to='/sign_in'>\n            <Button color='teal' size='huge'>\n              Log in\n            </Button>\n          </Link>\n          <Link to='/sign_up'>\n            <Button color='teal' size='huge'>\n              Get Started\n              <Icon name='right arrow' />\n            </Button>\n          </Link>\n        </>\n      }\n    </Container>\n  </Segment>\n\n    <Segment style={{ padding: '8em 0em' }} vertical>\n      <Container text>\n        <Header as='h3' style={{ fontSize: '2em' }}>\n          Breaking The Grid, Grabs Your Attention\n        </Header>\n        <p style={{ fontSize: '1.33em' }}>\n          Instead of focusing on content creation and hard work, we have learned how to master the\n          art of doing nothing by providing massive amounts of whitespace and generic content that\n          can seem massive, monolithic and worth your attention.\n        </p>\n        <Button as='a' size='large'>\n          Read More\n        </Button>\n\n        <Divider\n          as='h4'\n          className='header'\n          horizontal\n          style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n        >\n        </Divider>\n\n        <Header as='h3' style={{ fontSize: '2em' }}>\n          Did We Tell You About Our Bananas?\n        </Header>\n        <p style={{ fontSize: '1.33em' }}>\n          Yes I know you probably disregarded the earlier boasts as non-sequitur filler content, but\n          it's really true. It took years of gene splicing and combinatory DNA research, but our\n          bananas can really dance.\n        </p>\n        <Button as='a' size='large'>\n          I'm Still Quite Interested\n        </Button>\n      </Container>\n    </Segment>\n\n    <Segment inverted vertical style={{ padding: '5em 0em' }}>\n      <Container>\n        <Header as='h4' inverted>\n          About this project\n        </Header>\n        <p>\n          Extra space for a call to action inside the footer that could help re-engage users.\n        </p>\n      </Container>\n    </Segment>\n  </>\n)}\n\nexport default Homepage","import React, {useState, useEffect} from 'react' \nimport {Session, User} from '../api'\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst SignInPage = (props) => {\n  const [errors, setErrors] = useState([])\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const {currentTarget: form} = event\n    const formData = new FormData(form)\n    const params = {\n      email: formData.get('email'),\n      password: formData.get('password')\n    }\n    Session.create(params).then(data => {\n      if(data.status === 404) {\n        setErrors([...errors, {message: 'Wrong email or Password'}])\n      } else {\n        props.history.push('/fields')\n        if(typeof props.onSignIn === 'function'){\n          props.onSignIn()\n        }\n      }\n    })\n  }\n\n  useEffect(() => {\n    User.current().then(user => {\n      if (user.id) {\n        props.history.push('/fields')\n      }\n    })\n  }, [])\n\n  return(\n    <main>\n      <Grid style={{ height: '100vh' }} verticalAlign='middle' >\n        <Grid.Column width={6} style={{padding: '0 50px'}} textAlign='center'>\n            <Header as='h2' color='teal' textAlign='center'>\n              Log-in to your account\n            </Header>\n            <Form onSubmit={handleSubmit}>\n              <Segment stacked>\n                <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' name= 'email' id='email' />\n                <Form.Input\n                  fluid\n                  icon='lock'\n                  iconPosition='left'\n                  placeholder='Password'\n                  type='password'\n                  name='password'\n                  id='password'\n                />\n                <Button color='teal' fluid size='large'>\n                  Login\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <Link to='/sign_up'>Sign Up</Link>\n            </Message>\n        </Grid.Column>\n        <Grid.Column width={10} style={{height: '100%'}}  >\n          <Image style={{height: '100%'}} src='https://images.unsplash.com/photo-1558871585-4c3574a1b7cd?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8ZmllbGRzfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&w=1000&q=80' />\n        </Grid.Column>\n      </Grid>\n    </main>\n  )\n}\n\n\nexport default SignInPage;","import React, {useEffect} from 'react' \nimport {User} from '../api'\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst SignUpPage = (props) => {\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const {currentTarget: form} = event\n    const formData = new FormData(form)\n    const params = {\n      first_name: formData.get('first_name'),\n      last_name: formData.get('last_name'),\n      email: formData.get('email'),\n      password: formData.get('password'),\n      password_confirmation: formData.get('password_confirmation')\n    }\n    User.create(params).then(data => {\n      if(data.id) {\n        props.onSignUp()\n        props.history.push('/fields')\n      }\n    })\n  }\n\n  useEffect(() => {\n    User.current().then(user => {\n      if (user.id) {\n        props.history.push('/fields')\n      }\n    })\n  }, [])\n\n  return(\n    <main>\n      <Grid style={{ height: '100vh' }} verticalAlign='middle' >\n        <Grid.Column width={6} style={{padding: '0 50px'}} textAlign='center'>\n            <Header as='h2' color='teal' textAlign='center'>\n              Create a new account\n            </Header>\n            <Form onSubmit={handleSubmit}>\n              <Segment stacked>\n                <Form.Input fluid icon='user' iconPosition='left' placeholder='First Name' name= 'first_name' id='first_name' type='text'/>\n                <Form.Input fluid icon='user' iconPosition='left' placeholder='Last Name' name= 'last_name' id='last_name' type='text'/>\n                <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' name= 'email' id='email' type='email'/>\n                <Form.Input\n                  fluid\n                  icon='lock'\n                  iconPosition='left'\n                  placeholder='Password'\n                  type='password'\n                  name='password'\n                  id='password'\n                />\n                <Form.Input\n                  fluid\n                  icon='lock'\n                  iconPosition='left'\n                  placeholder='Password Confirmation'\n                  type='password'\n                  name='password_confirmation'\n                  id='password_confirmation'\n                />\n                <Button color='teal' fluid size='large'>\n                  Sign Up\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              Already a user? <Link to='/sign_in'>Log-in</Link>          \n            </Message>\n        </Grid.Column>\n        <Grid.Column width={10} style={{height: '100%'}}  >\n          <Image style={{height: '100%'}} src='https://images.unsplash.com/photo-1558871585-4c3574a1b7cd?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8ZmllbGRzfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&w=1000&q=80' />\n        </Grid.Column>\n      </Grid>\n    </main>\n  )\n}\n\n\nexport default SignUpPage;","import React from 'react';\n\nconst NotFoundPage = () => (\n  <div>\n    <h1>Page not found</h1>\n    <p>\n      Sorry, the page you are looking for does not exist.\n    </p>\n  </div>\n);\n\nexport default NotFoundPage;","import React, {useEffect, useState} from 'react'\nimport { Link, Router } from 'react-router-dom';\nimport { MapContainer, TileLayer, MapConsumer, FeatureGroup } from 'react-leaflet'\nimport * as L from 'leaflet';\nimport omnivore from 'leaflet-omnivore';\nimport ReactDOMServer from 'react-dom/server';\n\n\nconst FieldsMap = ({polygons, draw = false, geometry, setGeometry, preview, }) => {\n  const [editableFG, setEditableFG] = useState(null);\n  const [map, setMap] = useState(null);\n\n  const Popup = ({ polygon }) => {\n    return (\n      <div>\n        <a href={`/fields/${polygon.field_id}`}>Visit field</a>\n      </div>\n    );\n  };\n\n  const onFeatureGroupReady = reactFGref => {\n    console.log('FeatureGroup ready', reactFGref);\n    setEditableFG(reactFGref);\n    \n  };\n  const addWktToMap = (map, polygons) => {\n    // To avoid duplicated layers\n    map.eachLayer(layer => {\n      if(!layer._url) map.removeLayer(layer);\n    });\n\n    const bounds = L.latLngBounds([]);\n\n    for(let polygon of polygons) {\n      if ((preview && polygon.classification === 'base') || !preview) {\n        let p = omnivore.wkt.parse(polygon.geom).addTo(map);\n        if (preview) {\n          const popupContent = ReactDOMServer.renderToString(\n            <Popup polygon={polygon} />\n          );\n          p.bindPopup(popupContent)\n        }\n        bounds.extend(p.getBounds().getCenter())\n      }\n    }\n    return bounds\n  }\n  \n  const handleKmlLoad = (map, geometry) => {\n    console.log('KML loaded');\n    L.geoJSON(geometry).addTo(editableFG)\n    editableFG.addTo(map)\n    map.fitBounds(editableFG.getBounds())\n  }\n\n  useEffect(() => {\n    if(geometry) {\n      handleKmlLoad(map, geometry)\n    }\n    if (typeof L !== 'undefined' && map && draw) {\n      map.pm.addControls({\n        position: 'topleft',\n        drawCircle: false,\n        drawCircleMarker: false,\n        drawPolyline: false,\n        drawRectangle: false,\n        drawMarker: false,\n        drawPolygon: true,\n        editMode: true,\n        dragMode: false,\n        cutPolygon: false,\n        deleteMode: false,\n        selectedPathOptions: {\n          color: '#ff7800',\n          weight: 5,\n          opacity: 0.65\n        },\n        selectedPathInteractive: true,\n        selectedPathDashArray: '10, 10',\n        fullscreenControl: false,\n\n        draw\n      });\n      map.on('pm:create', ({layer, shape}) => {\n        console.log('pm:create', layer, shape);\n        const geojson = L.polygon(layer._latlngs[0]).toGeoJSON().geometry;\n        setGeometry(geojson)\n        layer.addTo(map)\n      });\n      editableFG.on('pm:update', ({layer, shape}) => {\n        console.log('edited')\n        const geojson = L.polygon(layer._latlngs[0]).toGeoJSON().geometry;\n        setGeometry(geojson)\n      })\n      console.log(editableFG)\n    }\n  }, [draw, geometry, map, editableFG])\n\n  return (\n    <MapContainer style={{height: '95vh', margin: '0'}} center={[49.212367, -122.921688]} zoom={13} scrollWheelZoom={false}>\n      <FeatureGroup \n        ref={featureGroupRef => {\n        onFeatureGroupReady(featureGroupRef) }}>\n      </FeatureGroup> \n      <MapConsumer>\n        {(map) => {\n          setMap(map);\n          let bounds = addWktToMap(map, polygons);\n          if(bounds.isValid()){\n            map.fitBounds(bounds);\n          }\n          console.log(map)\n          return null\n        }}\n      </MapConsumer>\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">Google Maps</a>'\n        url='https://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}'\n        subdomains={['mt0','mt1','mt2','mt3']}\n      />\n    </MapContainer>\n  )\n}\n\nexport default FieldsMap","import React, {useState, useEffect} from 'react'; \nimport { Field, Polygon } from '../api';\nimport { List, Grid, Input, Button, Icon } from 'semantic-ui-react';\nimport FieldsMap from './FieldsMap';\nimport { Link, useHistory } from 'react-router-dom';\n\n\nconst FieldsList = ({user}) => {\n  const [fields, setFields] = useState([]);\n  const [search, setSearch] = useState('');\n  const [polygons, setPolygons] = useState([])\n  const history = useHistory()\n\n  useEffect(() => {\n    Field.index().then(setFields);\n    if (user) {\n      Polygon.index(user.id).then(setPolygons);\n    }\n  }, [user]);\n\n  const handleDelete = (id) => {\n    if(window.confirm('Are you sure you want to delete this item?')){\n      Field.destroy(id).then(() => {\n        setFields(fields.filter(f => f.id !== id));\n      });\n    }\n  }\n\n  const filterFields = (field) => { \n    let fullString = field.name + field['crop_type'] + field.location\n    fullString = fullString.toLowerCase();\n    const searchArr = search.toLowerCase().split(' ');\n    return search ? searchArr.every(word => fullString.includes(word)) : true;\n  }\n\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column width={4}style={{padding: '10px 25px 0 30px'}}>\n          <Input placeholder='Search...' style={{width: '100%'}} \n            onChange={(event, data) => {\n              setSearch(data.value);\n            }}\n          />\n          <List relaxed>\n            <List.Item className='isInactive' key={0} onClick={() => {history.push('/fields/new')}} verticalAlign='middle' \n            style={{padding: '5px', borderRadius:'5px', margin: '5px 0'}}>\n              <List.Icon name='plus circle' style={{fontSize: '2em'}} color='teal' verticalAlign='middle' />\n              <List.Content verticalAlign='middle'>\n                <List.Header as='h3'>New Field</List.Header>\n              </List.Content>\n            </List.Item>\n            {fields.filter(el => filterFields(el)).map(field => (\n              <List.Item className='isInactive' key={field.id} style={{padding: '5px', borderRadius:'5px', margin: '5px 0'}}>\n                <List.Content style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n                <Link to={`/fields/${field.id}`}>\n                  <div style={{display: 'flex', alignItems: 'center'}}>\n                    <List.Icon name='map marker alternate' size='large' verticalAlign='middle' style={{marginLeft: '5px'}} />\n                    <div style={{marginLeft: '10px'}}>\n                      <List.Header>{field.name}</List.Header>\n                      <List.Description>{field.location} - {field.crop_type}</List.Description>\n                    </div>\n                  </div>\n                </Link>\n                  <Button size='tiny' onClick={() => {handleDelete(field.id)}}>\n                    <Icon name='trash' style={{margin: '0'}}/>\n                  </Button>\n                </List.Content>\n              </List.Item>\n            ))}\n          </List>\n        </Grid.Column>\n        <Grid.Column \n          width={12}\n          style={{padding: '0'}}>\n            <FieldsMap polygons={polygons} preview={true}/>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default FieldsList;","import React from 'react'\nimport { Menu, Header } from 'semantic-ui-react'\nimport {Session} from '../api'\nimport { Link, useHistory } from 'react-router-dom'\n\nconst Navbar = ({currentUser, onSignOut}) =>  {\n  const history = useHistory()\n  const handleSignOut = () => {\n    Session.destroy().then(() => {\n      onSignOut()\n      history.push('/')\n    })\n  }\n\n  if (currentUser) {\n    return (\n      <Menu\n      style={{marginBottom:0}}>\n        <Menu.Item>\n          <Link to=\"/fields\">\n            <Header as='h1' style={{margin:0}} color='teal'> \n              Farmage\n            </Header>\n          </Link>\n        </Menu.Item>\n        \n        <Menu.Menu position='right'>\n          <Menu.Item>\n            <Header as='h3'>\n              {currentUser[\"full_name\"]}\n            </Header>\n          </Menu.Item>\n          <Menu.Item\n          className='logout-btn'\n          name='logout'\n          onClick={handleSignOut}\n          />\n        </Menu.Menu>\n      </Menu>\n    )\n  } else {\n    return (\"\")\n  }\n}\n\nexport default Navbar","import React from 'react';\nimport { kml } from '@tmcw/togeojson'\nimport { DOMParser } from 'xmldom'\n\n\nconst KmlBase = ({setGeometry}) => {\n\n  const readKml = (event) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const parsedKML = new DOMParser().parseFromString(e.target.result, 'application/xml');\n      const geojson = kml(parsedKML)\n      let multipolygon = []\n      for(let f of geojson.features) {\n        if (f.geometry && f.geometry.coordinates) {\n          multipolygon.push(f.geometry.coordinates)\n        } else if (f.geometry && f.geometry.type === 'GeometryCollection') {\n          for(let g of f.geometry.geometries) {\n            if (g.type === 'Polygon') {\n              multipolygon.push(g.coordinates)\n            }\n          }\n        } else if (geojson.features.length === 1) {\n          multipolygon = f.geometry.coordinates\n        }\n      }\n      const output = {\n        type: geojson.type !== 'FeatureCollection'? 'Polygon' : 'MultiPolygon',\n        coordinates: multipolygon\n      }\n      setGeometry(output)\n    };\n    reader.readAsText(event.target.files[0]);\n  }\n\n  return (\n    <>\n      <div className=\"kml-upload__input\">\n        <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n          <h4 style={{margin: '5px 0'}}>a. Draw a polygon on the map</h4>\n          <h4 style={{margin: '5px 0'}}>Or</h4>\n          <h4 style={{margin: '5px 0'}}>b. Upload a KML file instead</h4>\n        </div>\n        <input type=\"file\" name=\"kml\" accept=\".kml\" onChange={readKml}/>\n      </div>\n    </>\n  );\n}\n\nexport default KmlBase;","import React from 'react';\nimport {Form, Button} from 'semantic-ui-react'\nimport { Field, Polygon } from '../api'\nimport { useHistory } from 'react-router-dom'\nimport KmlBase from './KmlBase';\n\n\n\nconst FieldForm = ({user, geometry, setGeometry}) => {\n  const history = useHistory()\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const { currentTarget } = e\n    const formData = new FormData(currentTarget)\n    const fieldParams = {\n      name: formData.get('name'),\n      location: formData.get('location'),\n      crop_type: formData.get('crop_type'),\n      user: user.id,\n    }\n    const polygonParams = {\n      classification: 'base',\n      geom: JSON.stringify(geometry),\n      user: user.id,\n    }\n    Field.create(fieldParams).then(field => {\n      Polygon.create(field.id, polygonParams).then(data => {\n        console.log(data)\n        history.push(`/fields/${field.id}`)\n      }).catch(err => {\n        console.log(err)\n      })\n    })\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Field>\n        <label>Field Name</label>\n        <input placeholder='Field Name' name='name'/>\n      </Form.Field>\n      <Form.Field>\n        <label>Location</label>\n        <input placeholder='Last Name' name='location'/>\n      </Form.Field>\n      <Form.Field >\n        <label>Crop Type</label>\n        <input placeholder='Crop Type' name='crop_type'/>\n      </Form.Field>\n      <KmlBase setGeometry={setGeometry}/>\n      <Button.Group style={{marginTop: '30px', width: '100%'}}>\n          <Button onClick={() => {history.push('/fields')}}>Cancel</Button>\n          <Button.Or />\n          <Button positive type='submit'>Create</Button>\n      </Button.Group>\n    </Form>\n  )\n}\n\nexport default FieldForm;","import React, {useState} from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport FieldsMap from './FieldsMap';\nimport FieldForm from './FieldForm'\n \nconst NewField = ({user}) => {\n  const [geometry, setGeometry] = useState(null);\n\n  const handleSetGeometry = (geometry) => {\n    setGeometry(geometry);\n    console.log(geometry);\n  }\n\n  return (\n    <Grid>\n    <Grid.Row>\n      <Grid.Column width={4}style={{padding: '10px 25px 0 30px'}}>\n        <FieldForm user={user} geometry={geometry} setGeometry={handleSetGeometry}/>\n      </Grid.Column>\n      <Grid.Column \n        width={12}\n        style={{padding: '0'}}>\n          <FieldsMap polygons={[]} draw={true} geometry={geometry} setGeometry={handleSetGeometry}/>\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>  \n  )\n}\n\nexport default NewField;","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { kml } from '@tmcw/togeojson'\nimport { DOMParser } from 'xmldom'\nimport { Polygon } from '../api';\nimport { useHistory } from 'react-router';\n\n\nconst KmlUpload = ({toggleKml, user, field, setGeometry, geometry}) => {\n  const history = useHistory()\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const { currentTarget } = e\n    const formData = new FormData(currentTarget)\n    const params = {\n      classification: formData.get('classification'),\n      geom: JSON.stringify(geometry),\n      user: user.id,\n    }\n    Polygon.create(field.id, params).then((res) => {\n      window.location.reload()\n    })\n    .catch(console.error)\n  }\n\n  const readKml = (event) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const parsedKML = new DOMParser().parseFromString(e.target.result, 'application/xml');\n      const geojson = kml(parsedKML)\n      let multipolygon = []\n      for(let f of geojson.features) {\n        if (f.geometry && f.geometry.coordinates) {\n          multipolygon.push(f.geometry.coordinates)\n        } else if (f.geometry && f.geometry.type === 'GeometryCollection') {\n          for(let g of f.geometry.geometries) {\n            if (g.type === 'Polygon') {\n              multipolygon.push(g.coordinates)\n            }\n          }\n        } else if (geojson.features.length === 1) {\n          multipolygon = f.geometry.coordinates\n        }\n      }\n      const output = {\n        type: geojson.type !== 'FeatureCollection'? 'Polygon' : 'MultiPolygon',\n        coordinates: multipolygon\n      }\n      setGeometry(output)\n    };\n    reader.readAsText(event.target.files[0]);\n  }\n\n  return (\n    <div className=\"kml-upload\">\n      <div className=\"kml-upload__title\">\n        <h4 style={{marginBottom: '10px'}}>1. Select a classification for your polygon</h4>\n      </div>\n      <div className=\"kml-upload__input\">\n\n        <Form onSubmit={handleSubmit}>\n          <Form.Field style={{marginBottom: '5px'}}>\n            <input placeholder='Polygon Classification' name='classification'/>\n          </Form.Field>\n          <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n            <h4 style={{margin: '5px 0'}}>2a. Draw a polygon on the map</h4>\n            <h4 style={{margin: '5px 0'}}>Or</h4>\n            <h4 style={{margin: '5px 0'}}>2b. Upload a KML file instead</h4>\n          </div>\n          <input type=\"file\" name=\"kml\" accept=\".kml\" onChange={readKml}/>\n          <Button.Group style={{marginTop: '10px', width: '100%'}}>\n            <Button onClick={toggleKml}>Cancel</Button>\n            <Button.Or />\n            <Button positive>Create</Button>\n          </Button.Group>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default KmlUpload;","import React, {useState, useEffect} from 'react';\nimport { Button, Icon, List, Header } from 'semantic-ui-react';\nimport KmlUpload from './KmlUpload';\nimport { Link } from 'react-router-dom';\nimport { Polygon } from '../api';\nimport * as kml from 'tokml'\nimport * as parse from 'wellknown'\n\nconst PolygonList = ({polygons, field, user, selectedPolygon, setSelectedPolygon, setDraw, setGeometry, geometry, setPolygons}) => {\n  const [creating, setCreating] = useState(false);\n\n  const toggleKml = () => {\n    setCreating(!creating);\n    setDraw(!creating)\n  }\n\n  useEffect(() => {\n    setSelectedPolygon(polygons[0]);\n  }, [polygons]);\n\n  const handleDelete = (id) => {\n    if(window.confirm('Are you sure you want to delete this item?')){\n      Polygon.destroy(id).then(() => {\n        setPolygons(polygons.filter(f => f.id !== id));\n      });\n    }\n  }\n\n  const download = (filename, text) => {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n  \n    element.style.display = 'none';\n    document.body.appendChild(element);\n  \n    element.click();\n  \n    document.body.removeChild(element);\n  }\n\n  const handleDownload = (polygon, field) => {\n    const geoj = parse(polygon.geom)\n    const kmlParsed = kml(geoj);\n    download(`${field.name} - ${polygon.classification}.kml`, kmlParsed)\n  }\n\n  const handleEdit = () => {\n    setDraw(true)\n  }\n\n  return (\n    <>\n      <Link to='/fields'>\n        <Button size='tiny'><Icon name='long arrow alternate left'/>Back</Button>\n      </Link>\n      <Header as=\"h1\" style={{marginBottom: '5px', marginTop: '10px'}}>{field.name}</Header>\n      <p style={{marginBottom: '30px'}}>Crop type: <b>{field.crop_type}</b></p>\n      <Header as=\"h3\">Polygons</Header>\n      <List relaxed>\n        <List.Item >\n          <List.Icon name='plus circle' size='large' color='green' verticalAlign='middle'/>\n          <List.Content>\n            <List.Header as='a' onClick={toggleKml}>New Polygon</List.Header>\n            {creating ? \n              <KmlUpload user={user} field={field} toggleKml={toggleKml} setGeometry={setGeometry} geometry={geometry}/> : ''}\n          </List.Content>\n        </List.Item>\n        {polygons.map(polygon => (\n          <List.Item style={{padding: '5px', borderRadius:'5px', margin: '5px 0'}}\n          key={polygon.id}\n          className={polygon === selectedPolygon ? 'isActive' : 'isInactive'}\n          onClick={() => {setSelectedPolygon(polygon)}}>\n            <List.Content style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n              <div style={{display: 'flex', alignItems: 'center'}}>\n                <List.Icon name='map' size='large' verticalAlign='middle' style={{margin: '0 15px 0 5px'}}/>\n                <div>\n                  <List.Header>{polygon.classification}</List.Header>\n                  <List.Description>{polygon.area} ha</List.Description>\n                </div>\n              </div>\n              <div>\n                <Button size='tiny' onClick={() => {handleEdit()}}>\n                  <Icon name='pencil' style={{margin: '0'}}/>\n                </Button>\n                <Button size='tiny' onClick={() => {handleDownload(polygon, field)}}>\n                  <Icon name='download' style={{margin: '0'}}/>\n                </Button>\n                <Button size='tiny' onClick={() => {handleDelete(polygon.id)}}>\n                  <Icon name='trash' style={{margin: '0'}}/>\n                </Button>\n              </div>\n            </List.Content>\n          </List.Item>\n        ))}\n      </List>\n    </>\n  );\n}\n\nexport default PolygonList;","import React, {useEffect, useState} from 'react';\nimport { Polygon, Field } from '../api';\nimport { Grid } from 'semantic-ui-react';\nimport FieldsMap from './FieldsMap';\nimport PolygonList from './PolygonList';\n\nconst FieldPage = ({user, match}) => {\n  const [field, setField] = useState({});\n  const [polygons, setPolygons] = useState([]);\n  const [selectedPolygon, setSelectedPolygon] = useState();\n  const [draw, setDraw] = useState(false);\n  const [geometry, setGeometry] = useState(null);\n\n  useEffect(() => {\n    Field.show(match.params.id).then(setField)\n    Polygon.indexByField(match.params.id).then(polygons => {\n      setPolygons(polygons);\n      setSelectedPolygon(polygons[0]);\n    })\n  }, []);\n\n  return (\n  <Grid>\n    <Grid.Row>\n      <Grid.Column width={4}style={{padding: '10px 25px 0 30px'}}>\n        <PolygonList \n          polygons={polygons} field={field} user={user} \n          setPolygons={setPolygons}\n          selectedPolygon={selectedPolygon} \n          setSelectedPolygon={setSelectedPolygon}\n          setDraw={setDraw}\n          setGeometry={setGeometry}\n          geometry={geometry}\n        />\n      </Grid.Column>\n      <Grid.Column \n        width={12}\n        style={{padding: '0'}}>\n          <FieldsMap setGeometry={setGeometry} geometry={geometry} polygons={selectedPolygon ? [selectedPolygon] : []} draw={draw}/>\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n  );\n}\n\nexport default FieldPage;","import React,{ useState, useEffect } from 'react';\nimport * as L from 'leaflet';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport '@geoman-io/leaflet-geoman-free'\nimport '@geoman-io/leaflet-geoman-free/dist/leaflet-geoman.css'\nimport './App.css';\nimport  {User} from './api'\nimport HomepageLayout from './components/Homepage';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport SignInPage from './components/SignInPage';\nimport SignUpPage from './components/SignUpPage';\nimport NotFoundPage from './components/NotFoundPage';\nimport FieldsList from './components/FieldsList';\nimport Navbar from './components/Navbar';\nimport NewField  from './components/NewField';\nimport FieldPage from './components/FieldPage';\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  \n  const getCurrentUser = () => {\n    return User.current().then(user => {\n      if (user.id) {\n        setUser(user);\n      }\n    });\n  }\n  \n  const onSignOut = () => {\n    setUser(null);\n  }\n  \n  useEffect(() => {\n    getCurrentUser();\n  }, []);\n  \n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar currentUser={user} onSignOut={onSignOut} />\n        <Switch>\n          <Route exact path='/' render={\n            (routeProps) => <HomepageLayout {...routeProps} user={user}/>\n          }/>\n          <Route exact path='/fields' render={\n            (routeProps) => <FieldsList {...routeProps} user={user}/>\n          }/>\n          <Route exact path='/fields/new' render={\n            (routeProps) => <NewField {...routeProps} user={user}/>\n          }/>\n          <Route exact path='/fields/:id' render={\n            (routeProps) => <FieldPage {...routeProps} user={user}/>\n          }/>\n          <Route exact path='/sign_in' render={\n            (routeProps) => <SignInPage {...routeProps} onSignIn={getCurrentUser}/>\n          }/>\n          <Route exact path='/sign_up' render={\n            (routeProps) => <SignUpPage {...routeProps} onSignUp={getCurrentUser}/> \n          }/>\n          <Route component={NotFoundPage} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}